name: valenstagram-backend

services:
  val-db:
    container_name: val-db
    image: postgres:16.8-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=val
      - POSTGRES_USER=val
      - POSTGRES_SCHEMA=val
      - POSTGRES_PASSWORD=val
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U val -d val"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - backend

  val-api:
    container_name: val-api
    image: evanhs/val-api:1.0
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:

      # Configuration base de données
      DB_URI: postgresql://val:val@val-db:5432/val
      
      # Configuration sécurité
      SECRET_KEY_APP: 'supermegasecretcode'
      SECRET_KEY_JWT: 'supermegasecretcodejwt'
    volumes:
      - uploads_data:/app/public/uploads
      - ./logs:/app/logs
    depends_on:
      val-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - frontend
      - backend

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge