services:
  db:
    container_name: db
    image: postgres:16.8-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/install-extensions.sql:/docker-entrypoint-initdb.d/install-extensions.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-val}
      - POSTGRES_USER=${POSTGRES_USER:-val}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-PL4ES3CH4NG3M3}
    networks:
      - val-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U val"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-80}:5000"
    environment:
      - FLASK_DEBUG=False
      - DB_URI=postgresql://${POSTGRES_USER:-val}:${POSTGRES_PASSWORD:-PL4ES3CH4NG3M3}@db:5432/${POSTGRES_DB:-val}
      - SECRET_KEY_APP=${SECRET_KEY_APP:-PL4ES3CH4NG3M3}
      - SECRET_KEY_JWT=${SECRET_KEY_JWT:-PL4ES3CH4NG3M3}
      - GENERATE_MIGRATIONS=false
    depends_on:
      db:
        condition: service_healthy
    networks:
      - val-network
    restart: always

networks:
  val-network:
    driver: bridge

volumes:
  postgres_data: